// Test langsung untuk memverifikasi output generator AHK route.ts
const fs = require('fs');

// Simulasi data input
const testData = {
  "transactionType": "BNS",
  "Nama Lengkap": "Test User",
  "Alamat": "Test Address", 
  "Nomor Telepon": "08123456789",
  "Pekerjaan": "Developer",
  "Nomor Identitas": "1234567890",
  "Tempat Tanggal Lahir": "Jakarta, 01 Jan 1990",
  "currency": "USD",
  "amount": "100000",
  "rate": "15500",
  "pembayaran": "auto"
};

// Copy logic dari route.ts untuk test
function generateAHKScript(data) {
  const ahkLines = [];
  const transactionType = data.transactionType || 'BNS';
  
  // Header
  ahkLines.push('; AHK Script Generated by MBA Data Entry System');
  ahkLines.push('; Compatible with AutoHotkey v1');
  ahkLines.push(`; Transaction Type: ${transactionType}`);
  ahkLines.push('');
  
  // Definisi TypeString untuk AHK v1
  ahkLines.push('TypeString:');
  ahkLines.push('    StringLen, StrLen, TypeString_str');
  ahkLines.push('    Loop, %StrLen%');
  ahkLines.push('    {');
  ahkLines.push('        StringMid, char, TypeString_str, %A_Index%, 1');
  ahkLines.push('        Send %char%');
  ahkLines.push('        Sleep 5');
  ahkLines.push('    }');
  ahkLines.push('return');
  ahkLines.push('');
  
  // Input data dengan loop
  ahkLines.push('keys := ["Nama Lengkap", "Alamat", "Nomor Telepon", "Pekerjaan", "Nomor Identitas", "Tempat Tanggal Lahir"]');
  ahkLines.push('for index, key in keys');
  ahkLines.push('{');
  ahkLines.push('    TypeString_str := data[key]');
  ahkLines.push('    Gosub, TypeString');
  ahkLines.push('    Sleep 50');
  ahkLines.push('    if (index < keys.MaxIndex())');
  ahkLines.push('    {');
  ahkLines.push('        Send {Tab}');
  ahkLines.push('        Sleep 100');
  ahkLines.push('    }');
  ahkLines.push('}');
  ahkLines.push('');
  
  // Test transaksi
  if (data.currency && data.amount && data.rate) {
    ahkLines.push('; === TRANSAKSI ===');
    ahkLines.push(`TypeString_str := "${data.amount}"`);
    ahkLines.push('Gosub, TypeString');
    ahkLines.push('Send {Tab}');
    ahkLines.push(`TypeString_str := "${data.rate}"`);
    ahkLines.push('Gosub, TypeString');
    ahkLines.push('');
    
    // Test pembayaran
    if (data.pembayaran === 'auto') {
      const pembayaranValue = String(parseFloat(data.amount) * parseFloat(data.rate));
      ahkLines.push('; === PEMBAYARAN ===');
      ahkLines.push(`TypeString_str := "${pembayaranValue}"`);
      ahkLines.push('Gosub, TypeString');
    }
  }
  
  ahkLines.push('');
  ahkLines.push('ExitApp');
  
  return ahkLines.join('\n');
}

// Generate dan test
const script = generateAHKScript(testData);

console.log('Generated AHK Script:');
console.log('====================');
console.log(script);
console.log('====================');

// Verifikasi tidak ada syntax error
const errors = [];

if (script.includes('CallTypeString(')) {
  errors.push('ERROR: Masih ada CallTypeString function yang invalid!');
}

if (script.includes('TypeString("') && !script.includes('TypeString_str :=')) {
  errors.push('ERROR: Masih ada TypeString function call yang invalid!');
}

if (!script.includes('TypeString_str :=')) {
  errors.push('ERROR: Format TypeString AHK v1 tidak ditemukan!');
}

if (!script.includes('Gosub, TypeString')) {
  errors.push('ERROR: Gosub TypeString tidak ditemukan!');
}

if (errors.length > 0) {
  console.log('\n❌ ERRORS FOUND:');
  errors.forEach(error => console.log(error));
} else {
  console.log('\n✅ SUCCESS: Semua format TypeString sudah benar untuk AHK v1!');
}

// Save untuk test manual
fs.writeFileSync('test-generator-output-final.ahk', script);
console.log('\nScript saved to test-generator-output-final.ahk untuk test manual');
